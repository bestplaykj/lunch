<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lunch.member.mapper.MemberMapper">
    
    <select id="signIn" resultType="lunch.member.dto.MemberDto" parameterType="lunch.member.dto.MemberDto">
        <![CDATA[
            SELECT  account
                      , pwd
                      , account_type
                      , member_name
                      , email
                      , DATE_FORMAT(registration_date, '%Y.%m.%d') AS registration_date
               FROM  member
             WHERE  use_yn = 'Y'
                 AND  account = #{account}
                 AND  pwd = #{pwd}
        ]]>
    </select>
    
    <select id="accountValidation" resultType="lunch.member.dto.MemberDto" parameterType="lunch.member.dto.MemberDto">
        <![CDATA[
            SELECT  account
               FROM  member
             WHERE  account = #{account}
        ]]>
    </select>
    
    <insert id="registration" parameterType="lunch.member.dto.MemberDto">
        <![CDATA[
            INSERT
               INTO  member
                        (account, pwd, member_name, email, registration_date)
           VALUES
                        (#{account}, #{pwd}, #{memberName}, #{email}, NOW())
        ]]>
    </insert>
    
    <update id="myProfileChangePwd" parameterType="lunch.member.dto.MemberDto">
        <![CDATA[
            UPDATE  member
                  SET  pwd = #{pwd}
             WHERE  account = #{account}
        ]]>
    </update>
    
    <update id="unregisterAccount" parameterType="lunch.member.dto.MemberDto">
        <![CDATA[
            UPDATE  member
                  SET  use_yn = 'N'
                       ,  unregistration_date = NOW()
             WHERE  account = #{account}
        ]]>
    </update>
    
    <select id="getAllMemberList" resultType="lunch.member.dto.MemberDto" parameterType="lunch.member.dto.MemberDto">
        <include refid="paging_header" />
            SELECT  account
                     ,  account_type
                     ,  member_name
                     ,  email
                     ,  DATE_FORMAT(registration_date, '%Y.%m.%d') AS registration_date
                     ,  DATE_FORMAT(unregistration_date, '%Y.%m.%d') AS unregistration_date
                     ,  use_yn
                     , registration_date AS orderDate
              FROM  member
              <include refid="getAllMemberListWhere" />
            ORDER  BY orderDate DESC, account ASC
        <include refid="paging_footer" />
    </select>
    
    <select id="getAllMemberListCount" resultType="_int" parameterType="lunch.member.dto.MemberDto">
        SELECT  COUNT(*)
          FROM  member
          <include refid="getAllMemberListWhere" />
    </select>
    
    <select id="getMemberProfile" resultType="lunch.member.dto.MemberDto" parameterType="lunch.member.dto.MemberDto">
        <![CDATA[
            SELECT  account
                      , account_type
                      , member_name
                      , email
                      , DATE_FORMAT(registration_date, '%Y.%m.%d') AS registration_date
                      , DATE_FORMAT(unregistration_date, '%Y.%m.%d') AS unregistration_date
                      , use_yn
               FROM  member
             WHERE  account = #{account}
        ]]>
    </select>
    
    <update id="changeAccountType" parameterType="lunch.member.dto.MemberDto">
        <![CDATA[
            UPDATE  member
                  SET  account_type = 'admin'
             WHERE  account = #{account}
        ]]>
    </update>
    
    
    <sql id="getAllMemberListWhere">
        WHERE  account_type = #{accountType}
        <if test="account != null and !''.equals(account)">
            AND  account  LIKE '%' #{account} '%'
        </if>
        <if test="memberName != null and !''.equals(memberName)">
            AND  member_name LIKE '%' #{memberName} '%'
        </if>
        <if test="(strDate != null and !''.equals(strDate)) and (endDate != null and !''.equals(endDate))">
            AND  (DATE_FORMAT(registration_date, '%Y-%m-%d')
                    BETWEEN STR_TO_DATE(#{strDate}, '%Y-%m-%d')
                            AND STR_TO_DATE(#{endDate}, '%Y-%m-%d'))
        </if>
    </sql>
    
    <sql id="paging_header">
        SELECT  M.*
          FROM  (
    </sql>
    
    <sql id="paging_footer">
                    ) M
       LIMIT #{offset}, #{limit}
    </sql>
    
    
    
    
    
</mapper>